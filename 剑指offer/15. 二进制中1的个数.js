/*
请实现一个函数，输入一个整数（以二进制串形式），输出该数二进制表示中 1 的个数。例如，把 9 表示成二进制是 1001，有 2 位是 1。因此，如果输入 9，则该函数输出 2。

 

示例 1：

输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。
示例 2：

输入：00000000000000000000000010000000
输出：1
解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。
示例 3：

输入：11111111111111111111111111111101
输出：31
解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。
提示：

输入必须是长度为 32 的 二进制串 。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/er-jin-zhi-zhong-1de-ge-shu-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

题解： 本来想用位运算的: n &(n-1) 或者 n-=(n & (-n))，但js做32的位运算会内存溢出...........
PS:n &(n-1)为消除最右边的1，(n & (-n))为找到最右边的1
那就回归本源好了，输入是1个10进制数，用求余发专成二进制数，求出有多少个1，就是结果
也是以把int转为二进制字符串然后统计字符串的1的个数
*/

var hammingWeight = function(n) {
    let res = 0
    while(n>0){
        res += n %2 
        n= parseInt(n/2)
    }
    return res
};


hammingWeight(4294967293)